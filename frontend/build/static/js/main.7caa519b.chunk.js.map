{"version":3,"sources":["components/input.js","services/httpService.js","services/urlService.js","services/userService.js","components/shortenUrl.js","components/mainpage.js","components/table.js","components/personal.js","components/navbar.js","services/authService.js","components/protectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["Input","props","onValueChange","value","onButtonClick","error","className","onSubmit","type","onChange","placeholder","onClick","axios","interceptors","response","use","status","console","log","alert","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","shortenUrl","longUrl","a","http","process","data","USER_URL","getUserInfo","postUrls","urls","deleteUrls","ShortenUrl","getHeartClass","url","save","onHearClick","user","length","map","index","style","padding","href","shortUrl","aria-hidden","window","onbeforeunload","localStorage","removeItem","MainPage","state","saveUrls","mapToViewModel","id","_id","handleShortenClicked","e","preventDefault","JSON","parse","stringify","urlService","urlViewModel","push","setState","handleValueChanged","target","handleHeartClicked","filter","handleSaveClicked","toast","info","userService","u","success","getItem","this","setItem","Fragment","Component","UrlTable","onDelete","onCancel","Table","striped","bordered","hover","responsive","header","key","slice","date","match","urlId","includes","Personal","handleDelete","handleCancel","userInfo","marginTop","disabled","NavBar","onSigninSuccess","onSigninFail","onSignout","Navbar","bg","variant","expand","fixed","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","width","render","renderProps","buttonText","clientId","onLogoutSuccess","class","marginRight","onSuccess","onFailure","cookiePolicy","name","signinUser","accessToken","jwtDecode","signoutUser","getCurrentUser","ProtectedRoute","path","component","rest","auth","configure","autoClose","App","currentUser","handleSigninSuccess","res","Zi","access_token","handleSigninFail","handleSignout","location","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7caa519b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = props => {\n  const { onValueChange, value, onButtonClick, error } = props;\n  return (\n    <form className=\"form row\" onSubmit={onButtonClick}>\n      <div className=\"col-md-8 align-self-center\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          onChange={onValueChange}\n          value={value}\n          placeholder=\"Shorten Your Link\"\n        ></input>\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n      <div className=\"col-md-4\">\n        <div className=\"confirm\">\n          <button className=\"button\" onClick={onButtonClick}>\n            Shorten\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Input;\n","import axios from \"axios\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(\"Unexpected error occurs\", error);\n    alert(\"An unexpected error occured\");\n  }\n\n  return Promise.reject(error);\n});\n\n// called in authService.js to set headers to http requests before any http request is made\nconst setJwt = jwt => {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n};\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from \"../services/httpService\";\n\nconst SHORTEN_URL = process.env.REACT_APP_BACKEND_DOMAIN + \"/api/url\";\n\nconst shortenUrl = async longUrl => {\n  const { data } = await http.post(SHORTEN_URL, { longUrl });\n  return data;\n};\n\nexport default { shortenUrl };\n","import http from \"../services/httpService\";\n\nconst USER_URL = process.env.REACT_APP_BACKEND_DOMAIN + \"/api/user\";\n\nconst getUserInfo = async () => {\n  const { data } = await http.get(USER_URL);\n  return data;\n};\n\nconst postUrls = async urls => {\n  const { data } = await http.post(USER_URL, { urls });\n  return data;\n};\n\nconst deleteUrls = async urls => {\n  const { data } = await http.delete(USER_URL, { data: { urls } });\n  return data;\n};\n\nexport default { getUserInfo, postUrls, deleteUrls };\n","import React from \"react\";\n\nconst ShortenUrl = props => {\n  const getHeartClass = url => {\n    if (url.save) {\n      return \"fa fa-heart hover\";\n    } else {\n      return \"fa fa-heart-o hover\";\n    }\n  };\n  const { urls, onHearClick, user } = props;\n  return (\n    <div className=\"shorten-action\">\n      <ul className=\"item-list\">\n        {urls.length\n          ? urls.map((url, index) => (\n              <div className=\"item\">\n                <li className=\"row\">\n                  <div className=\"long-link col-md-5\" style={{ padding: 0 }}>\n                    {url.longUrl}\n                  </div>\n                  <div className=\"long-link col-md-5\" style={{ padding: 0 }}>\n                    <a href={url.shortUrl}>{url.shortUrl}</a>\n                  </div>\n                  {user ? (\n                    <div className=\"col-md-1\" style={{ padding: 0 }}>\n                      <i\n                        className={getHeartClass(url)}\n                        aria-hidden=\"true\"\n                        onClick={() => onHearClick(index)}\n                      />\n                    </div>\n                  ) : null}\n                </li>\n              </div>\n            ))\n          : null}\n      </ul>\n    </div>\n  );\n};\n\nexport default ShortenUrl;\n","import React, { Component } from \"react\";\nimport Input from \"./input\";\nimport urlService from \"../services/urlService\";\nimport userService from \"../services/userService\";\nimport ShortenUrl from \"../components/shortenUrl\";\nimport { toast } from \"react-toastify\";\n\nconst STATE_KEY = \"mainpage\"; // key to store this.state to local storage\nwindow.onbeforeunload = () => localStorage.removeItem(STATE_KEY);\n\nclass MainPage extends Component {\n  state = {\n    longUrl: \"\",\n    urls: [],\n    saveUrls: [],\n    error: null\n  };\n\n  mapToViewModel = url => {\n    return {\n      id: url._id,\n      longUrl: url.longUrl,\n      shortUrl: url.shortUrl,\n      save: false\n    };\n  };\n\n  handleShortenClicked = async e => {\n    e.preventDefault();\n    const { longUrl } = this.state;\n    let urls = JSON.parse(JSON.stringify(this.state.urls)); // deep copy\n    try {\n      const data = await urlService.shortenUrl(longUrl);\n      const urlViewModel = this.mapToViewModel(data);\n      urls.push(urlViewModel);\n      this.setState({ urls, longUrl: \"\", error: null });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        this.setState({ error: ex.response.data });\n      }\n    }\n  };\n\n  handleValueChanged = e => {\n    const longUrl = e.target.value;\n    this.setState({ longUrl });\n  };\n\n  handleHeartClicked = index => {\n    let saveUrls = [...this.state.saveUrls];\n    let urls = JSON.parse(JSON.stringify(this.state.urls));\n    let url = urls[index];\n    if (url.save) {\n      url.save = false;\n      saveUrls = saveUrls.filter(id => id !== url.id);\n    } else {\n      url.save = true;\n      saveUrls.push(url.id);\n    }\n    this.setState({ urls, saveUrls });\n  };\n\n  handleSaveClicked = async e => {\n    const { saveUrls } = this.state;\n    if (!saveUrls.length) return toast.info(\"Heart the URL to Save\");\n    try {\n      const data = await userService.postUrls(saveUrls);\n      let urls = JSON.parse(JSON.stringify(this.state.urls));\n      urls = urls.filter(u => u.save === false);\n      this.setState({ urls, saveUrls: [] }, () => toast.success(\"Saved\"));\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        this.setState({ error: ex.response.data });\n      }\n    }\n  };\n\n  componentDidMount() {\n    let state = localStorage.getItem(STATE_KEY);\n    if (state) {\n      state = JSON.parse(state);\n      this.setState(state);\n    }\n  }\n\n  componentWillUnmount() {\n    let state = { ...this.state };\n    state = JSON.stringify(state);\n    localStorage.setItem(STATE_KEY, state);\n  }\n\n  render() {\n    const { longUrl, urls, saveUrls, error } = this.state;\n    const { user } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"banner\">\n          <h1 className=\"title\">SHORTEN URL</h1>\n        </div>\n        <section className=\"shorten-app\">\n          <div className=\"container\">\n            <Input\n              onValueChange={this.handleValueChanged}\n              value={longUrl}\n              onButtonClick={this.handleShortenClicked}\n              error={error}\n            />\n            <ShortenUrl\n              urls={urls}\n              onHearClick={this.handleHeartClicked}\n              user={user}\n            />\n\n            {user && (\n              <div className=\"confirm\">\n                <button className=\"button\" onClick={this.handleSaveClicked}>\n                  Save\n                </button>\n              </div>\n            )}\n          </div>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nconst UrlTable = props => {\n  const reduceLongUrl = longUrl => {\n    if (longUrl.length > 50) {\n      longUrl = longUrl.slice(0, 50) + \"...\";\n    }\n    return longUrl;\n  };\n\n  const reduceDate = date => {\n    const shortDate = date.match(/^(.*?)GMT/);\n    return shortDate[1];\n  };\n\n  const getActionButton = urlId => {\n    const { deleteUrls } = props;\n    if (deleteUrls.includes(urlId)) {\n      return (\n        <button\n          className=\"btn btn-sm btn-outline-primary\"\n          onClick={() => onCancel(urlId)}\n        >\n          Cancel\n        </button>\n      );\n    } else {\n      return (\n        <button\n          className=\"btn btn-sm btn-outline-danger\"\n          onClick={() => onDelete(urlId)}\n        >\n          Delete\n        </button>\n      );\n    }\n  };\n\n  const headers = [\"#\", \"Long Url\", \"Short Url\", \"Date\", \"Action\"];\n  const { urls, onDelete, onCancel } = props;\n  return (\n    <Table striped bordered hover responsive>\n      <thead>\n        <tr>\n          {headers.map((header, index) => (\n            <th key={index}>{header}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {urls.length\n          ? urls.map((url, index) => (\n              <tr key={url._id}>\n                <td>{index}</td>\n                <td>\n                  <a href={url.longUrl}>{reduceLongUrl(url.longUrl)}</a>\n                </td>\n                <td>\n                  <a href={url.shortUrl}>{url.shortUrl}</a>\n                </td>\n                <td>{reduceDate(url.date)}</td>\n                <td>{getActionButton(url._id)}</td>\n              </tr>\n            ))\n          : null}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default UrlTable;\n","import React, { Component } from \"react\";\nimport UrlTable from \"./table\";\nimport userService from \"../services/userService\";\nimport { toast } from \"react-toastify\";\n\nclass Personal extends Component {\n  state = {\n    urls: [],\n    deleteUrls: []\n  };\n\n  handleDelete = urlId => {\n    const deleteUrls = [...this.state.deleteUrls];\n    deleteUrls.push(urlId);\n    this.setState({ deleteUrls });\n  };\n\n  handleCancel = urlId => {\n    let deleteUrls = [...this.state.deleteUrls];\n    deleteUrls = deleteUrls.filter(id => id !== urlId);\n    this.setState({ deleteUrls });\n  };\n\n  handleSaveClicked = async () => {\n    const { deleteUrls } = this.state;\n    const userInfo = await userService.deleteUrls(deleteUrls);\n    this.setState({ urls: userInfo.urls }, () => toast.success(\"Saved\"));\n  };\n\n  async componentDidMount() {\n    const userInfo = await userService.getUserInfo();\n    this.setState({ urls: userInfo.urls });\n  }\n\n  render() {\n    const { urls, deleteUrls } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"table\" style={{ marginTop: \"100px\" }}>\n            <UrlTable\n              urls={urls}\n              deleteUrls={deleteUrls}\n              onDelete={this.handleDelete}\n              onCancel={this.handleCancel}\n            />\n            <button\n              className=\"btn btn-primary\"\n              onClick={this.handleSaveClicked}\n              disabled={deleteUrls.length ? false : true}\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Personal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\n\nconst NavBar = props => {\n  const { onSigninSuccess, onSigninFail, onSignout, user } = props;\n  return (\n    <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand as={Link} to=\"/\">\n        Short URL\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto justify-content-end\" style={{ width: \"100%\" }}>\n          <Nav.Link as={Link} to=\"/\">\n            Home\n          </Nav.Link>\n          {user ? (\n            <GoogleLogout\n              render={renderProps => (\n                <Nav.Link\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  Sign Out\n                </Nav.Link>\n              )}\n              buttonText=\"Sign Out\"\n              clientId={process.env.REACT_APP_CLIENT_ID}\n              onLogoutSuccess={onSignout}\n            />\n          ) : (\n            <GoogleLogin\n              render={renderProps => (\n                <Nav.Link\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  <i\n                    class=\"fa fa-google\"\n                    aria-hidden=\"true\"\n                    style={{ marginRight: \"3px\" }}\n                  ></i>\n                  Sign In\n                </Nav.Link>\n              )}\n              clientId={process.env.REACT_APP_CLIENT_ID}\n              buttonText=\"Sign In\"\n              onSuccess={onSigninSuccess}\n              onFailure={onSigninFail}\n              cookiePolicy=\"single_host_origin\"\n            />\n          )}\n          {user && (\n            <Nav.Link as={Link} to=\"/me\">\n              {user.name}\n            </Nav.Link>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nconst SIGNIN_URL = process.env.REACT_APP_BACKEND_DOMAIN + \"/api/signin\";\nconst tokenKey = \"jwt\";\n\nconst signinUser = async accessToken => {\n  // Signin to get the JWT token.\n  // accessToken is google oauth access token. Return data is jwt token\n  const { data } = await http.post(SIGNIN_URL, { accessToken });\n  const user = jwtDecode(data);\n  localStorage.setItem(tokenKey, data);\n  // set token into header\n  http.setJwt(data);\n  return user;\n};\n\nconst signoutUser = () => {\n  localStorage.removeItem(tokenKey);\n  http.setJwt(null);\n};\n\nconst getCurrentUser = () => {\n  const jwt = localStorage.getItem(tokenKey);\n  http.setJwt(jwt);\n  if (jwt) {\n    const user = jwtDecode(jwt);\n    return user;\n  }\n  return null;\n};\n\nexport default { signinUser, signoutUser, getCurrentUser };\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\n\nconst ProtectedRoute = props => {\n  // component need to capitalize so react know its a Component\n  const { path, component: Component, ...rest } = props;\n  const user = auth.getCurrentUser();\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        if (!user) {\n          alert(\"Unauthorize! Please Sign In\");\n          return <Redirect to=\"/\" />;\n        }\n        return <Component {...props} />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport MainPage from \"./components/mainpage\";\nimport Personal from \"./components/personal\";\nimport NavBar from \"./components/navbar\";\nimport ProtectedRoute from \"./components/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"./App.css\";\n\ntoast.configure({ autoClose: 1500 });\n\nclass App extends Component {\n  state = { currentUser: null };\n\n  handleSigninSuccess = async res => {\n    const currentUser = await auth.signinUser(res.Zi.access_token);\n    this.setState({ currentUser });\n  };\n\n  handleSigninFail = async res => {\n    const { error } = res;\n    console.log(error);\n    return alert(\n      \"Please allow pop up for this page. Clear Cache History if cannot log in\"\n    );\n  };\n\n  handleSignout = () => {\n    auth.signoutUser();\n    window.location = \"/\";\n  };\n\n  componentDidMount() {\n    const currentUser = auth.getCurrentUser();\n    this.setState({ currentUser });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar\n          user={currentUser}\n          onSigninSuccess={this.handleSigninSuccess}\n          onSigninFail={this.handleSigninFail}\n          onSignout={this.handleSignout}\n        />\n        <Switch>\n          <ProtectedRoute path=\"/me\" component={Personal} />\n          <Route\n            path=\"/\"\n            render={props => <MainPage {...props} user={currentUser} />}\n          />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}